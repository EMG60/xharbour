#===============================================================================
#
# $Id$
#
# MAKEFILE FOR MINGW32
#
# This is Generic File, do not change it. If you should require your own build
# version, changes should only be made on your local copy.(AJ: 2008-04-26)
#
#===============================================================================
include winmake$(DIR_SEP)common.mak

RESEXT=.o
RC    =windres
CC    =Clang
CCP   =Clang++
TYPE  =type
DEL   =$(HBRM_EXE)
COPY  =copy

ifeq ($(HB_ARCH),w64)
ARCH_FLAG =-m64
RC_ARCH_FLAG=--target=pe-x86-64
C64FLAGS  =$(ARCH_FLAG) -DNODLL
HB64FLAGS =-dNODLL
HB_TARGET =-target x86_64-w64-mingw32-ucrt
else
ARCH_FLAG =-m32
RC_ARCH_FLAG=--target=pe-i386
C64FLAGS  =$(ARCH_FLAG)
HB_TARGET =-target i686-w64-mingw32-ucrt
endif

ifneq ($(HB_COMP_NO_TRACE),1)
CC_COMP_DEFINES   =-D__HB_COMP_TRACE__
endif

ifeq ($(HB_OPTIMFLAGS),)
HB_OPTIMFLAGS     =-gc0
endif

ifeq ($(HB_DEBUG),d)
CC_DEBUGFLAGS     =-g
ifneq ($(HB_DBG_VMALL),1)
HB_NO_VM_ALL      =1
endif
ifneq ($(HB_DBG_DLMALLOC),1)
HB_NO_FM_DL_ALLOC =1
endif
ifneq ($(HB_DBG_DVMEMCPY),1)
HB_NO_DV_MEMCPY   =1
endif
else
HB_OPTIMFLAGS     +=-l
endif


OPTFLAGS    =-W -Wall -c  $(HB_TARGET) -O3 
#OPTFLAGS1    =-W -Wall -fomit-frame-pointer $(HB_TARGET) -O3 -c -fno-strict-aliasing -Wmissing-braces -Wreturn-type -Wformat -Wimplicit-int -Wimplicit-function-declaration
HB_INCLUDE  =-i"include" -i"$(PDFLITE_DIR)$(DIR_SEP)include" -i"$(SIXAPI_DIR)$(DIR_SEP)include" -i"$(GDLIB_DIR)$(DIR_SEP)include" -i"$(XWT_DIR)$(DIR_SEP)include" -i"$(CGI_DIR)$(DIR_SEP)include" 
CC_DEFINES  =-D__WIN32__ -DHAVE_CONFIG_H -D_HAVE_SQLITE_CONFIG_H -DHARBOUR_CONF
INCLUDE_DIR =-I"include" -I"$(ZLIB_DIR)" -I"$(PNG_DIR)" -I"$(PDFLITE_DIR)$(DIR_SEP)include" -I"$(OBJ_DIR)" -I"$(JPEG_DIR)" -I"$(TIFF_DIR)"
INCLUDE_DIR +=-I"$(FREEIMAGE_DIR)$(DIR_SEP)include" -I"$(GDLIB_DIR)$(DIR_SEP)include" -I"$(XWT_DIR)$(DIR_SEP)include" -I"$(XWT_DIR)$(DIR_SEP)src$(DIR_SEP)xwt_win" -I"$(SIXAPI_DIR)$(DIR_SEP)include"

ifneq ($(HB_NO_FM_DL_ALLOC),1)
CC_DEFINES  +=-DHB_FM_DL_ALLOC
endif

ifneq ($(HB_NO_VM_ALL),1)
CC_DEFINES  +=-DHB_VM_ALL
endif

ifeq ($(HB_NO_DV_MEMCPY),1)
CC_DEFINES  +=-DHB_NO_DV_MEMCPY
endif

ifeq ($(HB_NO_BACKGROUND),1)
CC_DEFINES  +=-DHB_NO_BACKGROUND
endif

ifeq ($(HB_GUI),1)
CC_DEFINES  +=-DHB_GUI
endif

ifeq ($(HB_MT),mt)
CC_DEFINES   +=-DHB_THREAD_SUPPORT -mthreads
HARBOURFLAGS +=-dHB_THREAD_SUPPORT
endif

ifeq ($(HB_DEBUGGER_OFF),1)
CC_DEFINES   +=-DHB_NO_DEBUG
endif

ifeq ($(HB_AVOID_RESERVED_WORDS),1)
CC_DEFINES   +=-DHB_AVOID_RESERVED_WORDS
endif

ifneq ($(HB_NO_VM_ALL),1)
VM_LIB_OBJS=\
	$(VM_ALL_OBJS)
#	$(VM_MAIN_OBJS)
endif

VM_LIB_OBJS+=\
	$(VM_COMMON_OBJS)\
	$(VM_MAIN_OBJS)

HARBOURFLAGS  +=$(HB_INCLUDE) $(HB64FLAGS) -q0 -w3 -es2 $(HB_OPTIMFLAGS)
CLIBFLAGS     +=$(CC_DEFINES) $(INCLUDE_DIR) $(OPTFLAGS) $(C64FLAGS) $(CC_DEBUGFLAGS)

ifeq ($(HB_USE_BISON),1)
HARBOUR_Y    =$(COMPILER_DIR)$(DIR_SEP)harbour.sly
MACRO_Y      =$(MACRO_DIR)$(DIR_SEP)macro.y
BISON_CMD1   =bison -v -d -o $@ $^
BISON_CMD2   =bison -v -d -o $@ $^
else
HARBOUR_Y    =$(COMPILER_DIR)$(DIR_SEP)harbouryy.c
MACRO_Y      =$(MACRO_DIR)$(DIR_SEP)macroyy.c
BISON_CMD1   =$(TYPE) $(COMPILER_DIR2)\harbouryy.c > $(OBJ_DIR)$(DIR_SEP)harboury.c
BISON_CMD2   =$(TYPE) $(MACRO_DIR2)\macroyy.c > $(OBJ_DIR)$(DIR_SEP)macroy.c
endif

#*******************************************************************************
ifeq ($(__BLD__),CORE_BLD)
#*******************************************************************************

#HBDOC_EXE_OBJS+=\
#	$(HBDOC_PDF_OBJS)

ifeq ($(HB_GTALLEG),1)
HB_GT_LIBS+=\
	$(GTALLEG_LIB)
endif

HARBOUR_LIBS=\
	-L$(LIB_DIR)\
	-Wl,--start-group\
	-lvm$(HB_MT)$(HB_DEBUG)\
	-lrtl$(HB_DEBUG)\
	-lrdd$(HB_DEBUG)\
	-lct$(HB_DEBUG)\
	-lpng$(HB_DEBUG)\
	-lzlib$(HB_DEBUG)\
	-ltiff$(HB_DEBUG)\
	-ljpeg$(HB_DEBUG)\
	-lpdflite$(HB_DEBUG)\
	-lgtwin$(HB_DEBUG)\
	-llibmisc$(HB_DEBUG)\
	-lcodepage$(HB_DEBUG)\
	-lmacro$(HB_DEBUG)\
	-ldbfcdx$(HB_DEBUG)\
	-lbmdbfcdx$(HB_DEBUG)\
	-lsixcdx$(HB_DEBUG)\
	-ldbfntx$(HB_DEBUG)\
	-ldbfnsx$(HB_DEBUG)\
	-ldbffpt$(HB_DEBUG)\
	-lhbsix$(HB_DEBUG)\
	-lhsx$(HB_DEBUG)\
	-lpcrepos$(HB_DEBUG)\
	-lcommon$(HB_DEBUG)\
	-lpp$(HB_DEBUG)\
	-llang$(HB_DEBUG)\
	-Wl,--end-group

COMPILERLIBS=\
	-L$(CC_DIR)$(DIR_SEP)lib\
	-luser32 -lwinspool -lcomctl32 -lcomdlg32 -lgdi32 -lwinmm -lmpr\
	-lole32 -luuid -loleaut32 -liphlpapi -lws2_32

EXE_LIBS     =$(HARBOUR_LIBS) $(COMPILERLIBS)
HRB_LIBS     =-L$(LIB_DIR) -Wl,--start-group -lcompiler$(HB_DEBUG) -Wl,--end-group $(COMPILERLIBS)
CMN_LIBS     =-L$(LIB_DIR) -lcommon$(HB_DEBUG) $(COMPILERLIBS)

ifeq ($(HB_MT),)
PROJECT =$(ST_PROJECT)
else
PROJECT =$(MT_PROJECT)
endif

ALL: $(PROJECT)

#*******************************************************************************
else ifeq ($(__BLD__),DLL_BLD)
#*******************************************************************************

HARBOUR_DLL_OBJS+=\
	$(TIFF_LIB_OBJS)

COMPILERLIBS=\
	-L$(CC_DIR)$(DIR_SEP)lib -L$(BIN_DIR) -L$(LIB_DIR)\
	-luser32 -lwinspool -lcomctl32 -lcomdlg32 -lgdi32 -lwinmm -lmpr\
	-lole32 -luuid -loleaut32 -lws2_32 -liphlpapi -ldllmain$(HB_DEBUG) -lxharbour$(HB_DEBUG)

COMPILERLIBS1=\
	-L$(CC_DIR)$(DIR_SEP)lib -L$(BIN_DIR) -L$(LIB_DIR)\
	-lws2_32 -lwinmm -lgdi32 -lole32 -lwinspool\
	-loleaut32 -luuid -lmpr -liphlpapi

ifneq ($(HB_DIR_ADS),)
ifeq ($(HB_DLL_HAVE_ADS),1)
CLIBFLAGS +=-I"$(HB_DIR_ADS)"
ifeq ($(HB_ADS_IMPLIB),no)
else
COMPILERLIBS+=\
	-lace32
COMPILERLIBS1+=\
	-lace32
endif
HARBOUR_DLL_OBJS+=\
	$(RDDADS_LIB_OBJS)
endif
endif

CLIBFLAGS    +=-DHB_NO_DUPLICATE_HVMPROCESSSYMBOL -D__EXPORT__ -mdll

ifeq ($(HB_DLL_ISMT),1)
CLIBFLAGS    +=-DHB_THREAD_SUPPORT -mthreads
HARBOURFLAGS +=-dHB_THREAD_SUPPORT
endif

ALL: $(DLL_PROJECT)

#*******************************************************************************
else ifeq ($(__BLD__),CONTRIB_BLD)
#*******************************************************************************

MORE_INCLUDE=-I"$(RDDSQL_DIR)" -I"$(HBSQLIT3_DIR)"

ifneq ($(HB_DIR_ADS),)
OPTIONAL_PRJ+=$(RDDADS_LIB)
MORE_INCLUDE+=-I"$(HB_DIR_ADS)"
endif

ifneq ($(HB_DIR_OPENSSL),)
OPTIONAL_PRJ+=$(TIPSSL_LIB) $(HBSSL_LIB)
MORE_INCLUDE+=-I"$(HB_DIR_OPENSSL)$(DIR_SEP)include"
endif

ifneq ($(HB_DIR_CURL),)
OPTIONAL_PRJ+=$(HBCURL_LIB)
MORE_INCLUDE+=-I"$(HB_DIR_CURL)$(DIR_SEP)include"
endif

ifneq ($(HB_DIR_CAIRO),)
OPTIONAL_PRJ+=$(HBCAIRO_LIB)
MORE_INCLUDE+=-I"$(HB_DIR_CAIRO)$(DIR_SEP)include$(DIR_SEP)cairo"
endif

ifneq ($(HB_DIR_POSTGRESQL),)
OPTIONAL_PRJ+=$(PGSQL_LIB) $(SDDPG_LIB)
MORE_INCLUDE+=-I"$(HB_DIR_POSTGRESQL)$(DIR_SEP)include"
endif

ifneq ($(HB_DIR_OCILIB),)
OPTIONAL_PRJ+=$(SDDOCI_LIB)
MORE_INCLUDE+=-I"$(HB_DIR_OCILIB)$(DIR_SEP)include"
endif

ifneq ($(HB_DIR_MYSQL),)
OPTIONAL_PRJ+=$(MYSQL_LIB) $(SDDMY_LIB)
MORE_INCLUDE+=-I"$(HB_DIR_MYSQL)$(DIR_SEP)include"
endif

ifneq ($(HB_DIR_FIREBIRD),)
OPTIONAL_PRJ+=$(FIREBIRD_LIB) $(SDDFB_LIB)
MORE_INCLUDE+=-I"$(HB_DIR_FIREBIRD)$(DIR_SEP)include"
endif

ifneq ($(HB_DIR_MAGIC),)
OPTIONAL_PRJ+=$(HBMAGIC_LIB)
MORE_INCLUDE+=-I"$(HB_DIR_MAGIC)$(DIR_SEP)include"
endif

CLIBFLAGS  +=$(MORE_INCLUDE)

ifeq ($(HB_ADS_IMPLIB),no)
RDDADS_LIB_OBJS+=\
	$(OBJ_DIR)$(DIR_SEP)ace32$(OBJEXT)
endif

CONTRIB_PROJECT+=\
	$(HBSQLIT3_LIB)\
	$(GTWVW_LIB)\
	$(XWT_LIB)\
	$(GTWVG_LIB)\
	$(HBZIP_LIB)

CONTRIB_PROJECT += $(OPTIONAL_PRJ)

ALL: $(CONTRIB_PROJECT)

endif

ifneq ($(HB_DEBUG),d)
ZIP_DEBUGFLAGS  =-DNDEBUG
endif

RC_CMD          =$(RC) $(RC_ARCH_FLAG) --input=$^ --output=$@
LIB_CMD         =$(DEL) $@ && AR cru $@ $^ && ranlib $@
LIB_CMD_1       =$(LIB_CMD)
ifneq ($(HB_ARCH),w64)
DLL_LINK_CMD    =$(CC) $(ARCH_FLAG) $(CC_DEBUGFLAGS) -shared -W $(EXPORT_DEF) -Wl,--out-implib,$(HARBOUR_DLL_LIB) -o $@ @winmake$(DIR_SEP)mingw.rsp $(COMPILERLIBS1) $(HARBOUR_DLL_RES)
else
DLL_LINK_CMD    =$(CC) $(ARCH_FLAG) $(CC_DEBUGFLAGS) -shared -W $(EXPORT_DEF) -Wl,--out-implib,$(HARBOUR_DLL_LIB) -o $@ $^ $(COMPILERLIBS1) $(HARBOUR_DLL_RES)
endif
DLLEXE_LINK_CMD =$(CC) $(ARCH_FLAG) $(CC_DEBUGFLAGS) -Wall -o $@ $^ $(HARBOUR_DLL) -Wl,--start-group -lpdflite$(HB_DEBUG) -Wl,--end-group $(COMPILERLIBS)
LINK_CMD        =$(CC) $(ARCH_FLAG) $(CC_DEBUGFLAGS) -mconsole -Wall -o $@ $^
HRB_LINK_CMD    =$(CC) $(ARCH_FLAG) $(CC_DEBUGFLAGS) -mconsole -Wall -o $(HARBOUR_EXE) $(HARBOUR_EXE_OBJS) $(HRB_LIBS) $(HARBOUR_EXE_RES)
HB_CMD          =$(HARBOUR_EXE) -n1 $(HARBOURFLAGS) -o$@ $^
HB_CMD_MAIN     =$(HARBOUR_EXE) -n0 $(HARBOURFLAGS) -d"_USE_APPMAIN_" -o$@ $^
CC_CMD          =$(CC) $(CLIBFLAGS) -o $@ $^
CC_CMD_NOWARN   =$(CC) $(CLIBFLAGS) -o $@ $^
CC_CMD_HARBOUR  =$(CC) -D__HB_COMPILER__ $(CC_COMP_DEFINES) $(CLIBFLAGS) -o $@ $^
CCC_CMD         =$(CC_CMD)
CCC_CMD_NOWARN  =$(CC_CMD)
CC_CMD_ZIP      =$(CCP) $(CC_DEBUGFLAGS) -I"include" -I"$(HBZIP_DIR)$(DIR_SEP)include" -D_WIN32 $(ZIP_DEBUGFLAGS) -fpermissive -c -o $@ $^

#===============================================================================
# Building rules of Object files
#===============================================================================

include winmake$(DIR_SEP)common2.mak
include winmake$(DIR_SEP)compile.mak